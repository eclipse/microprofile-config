#
# Copyright (c) 2016-2017 Contributors to the Eclipse Foundation
#
# See the NOTICES file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#


tck.config.test.javaconfig.properties.key1=VALue1


tck.config.test.overwritten.in.custompropertyfile.key1=value from microprofile-config.properties

tck.config.test.javaconfig.converter.bytevalue = 123
tck.config.test.javaconfig.converter.bytevalue.broken = xxx

tck.config.test.javaconfig.converter.shortvalue = 1234
tck.config.test.javaconfig.converter.shortvalue.broken = xxx


tck.config.test.javaconfig.converter.integervalue = 1234
tck.config.test.javaconfig.converter.integervalue.broken = xxx

tck.config.test.javaconfig.converter.longvalue = 1234567890
tck.config.test.javaconfig.converter.longvalue.broken = xxx

tck.config.test.javaconfig.converter.floatvalue = 12.34
tck.config.test.javaconfig.converter.floatvalue.broken = alfasdf

tck.config.test.javaconfig.converter.doublevalue = 12.34
tck.config.test.javaconfig.converter.doublevalue.broken = alfasdf

tck.config.test.javaconfig.converter.charvalue = c
tck.config.test.javaconfig.converter.charvalue.broken = xxx

# the following are actually using implicit converters now:

tck.config.test.javaconfig.converter.durationvalue = PT15M
tck.config.test.javaconfig.converter.durationvalue.broken = alfasdf

tck.config.test.javaconfig.converter.localtimevalue = 10:37
tck.config.test.javaconfig.converter.localtimevalue.broken = alfasdf

tck.config.test.javaconfig.converter.localdatevalue = 2017-12-24
tck.config.test.javaconfig.converter.localdatevalue.broken = alfasdf

tck.config.test.javaconfig.converter.localdatetimevalue = 2017-12-24T10:25:30
tck.config.test.javaconfig.converter.localdatetimevalue.broken = alfasdf

tck.config.test.javaconfig.converter.offsetdatetimevalue = 2007-12-03T10:15:30+01:00
tck.config.test.javaconfig.converter.offsetdatetimevalue.broken = alfasdf

tck.config.test.javaconfig.converter.offsettimevalue = 13:45:30.123456789+02:00
tck.config.test.javaconfig.converter.offsettimevalue.broken = alfasdf

tck.config.test.javaconfig.converter.zoneoffsetvalue = +02:00
tck.config.test.javaconfig.converter.zoneoffsetvalue.broken = alfasdf

tck.config.test.javaconfig.converter.instantvalue = 2015-06-02T21:34:33.616Z
tck.config.test.javaconfig.converter.instantvalue.broken = alfasdf

tck.config.test.javaconfig.configvalue.key1=value1


# test BooleanConverter START
tck.config.test.javaconfig.configvalue.boolean.true=true
tck.config.test.javaconfig.configvalue.boolean.true_uppercase=TRUE
tck.config.test.javaconfig.configvalue.boolean.true_mixedcase=TruE
tck.config.test.javaconfig.configvalue.boolean.false=false

tck.config.test.javaconfig.configvalue.boolean.one=1
tck.config.test.javaconfig.configvalue.boolean.zero=0
tck.config.test.javaconfig.configvalue.boolean.seventeen=17

tck.config.test.javaconfig.configvalue.boolean.yes=yes
tck.config.test.javaconfig.configvalue.boolean.yes_uppercase=YES
tck.config.test.javaconfig.configvalue.boolean.yes_mixedcase=Yes
tck.config.test.javaconfig.configvalue.boolean.no=no
tck.config.test.javaconfig.configvalue.boolean.no_mixedcase=No

tck.config.test.javaconfig.configvalue.boolean.y=y
tck.config.test.javaconfig.configvalue.boolean.y_uppercase=Y
tck.config.test.javaconfig.configvalue.boolean.n=n

tck.config.test.javaconfig.configvalue.boolean.on=on
tck.config.test.javaconfig.configvalue.boolean.on_uppercase=ON
tck.config.test.javaconfig.configvalue.boolean.on_mixedcase=oN
tck.config.test.javaconfig.configvalue.boolean.off=off

# test BooleanConverter END

# various other converter
tck.config.test.javaconfig.configvalue.integer=1234
tck.config.test.javaconfig.configvalue.long=1234567890123456
tck.config.test.javaconfig.configvalue.float=12.34
tck.config.test.javaconfig.configvalue.double=12.34567890123456

# Custom Converter tests
tck.config.test.javaconfig.converter.duckname=Hannelore

# Lambda converter tests
tck.config.test.javaconfig.converter.donaldname=Duck

# URL Converter tests
tck.config.test.javaconfig.converter.urlvalue=http://microprofile.io
tck.config.test.javaconfig.converter.urlvalue.broken=tt:--location

# URI Converter tests
tck.config.test.javaconfig.converter.urivalue=http://microprofile.io
tck.config.test.javaconfig.converter.urivalue.broken=space is an illegal uri character

# implicit Converter tests
tck.config.test.javaconfig.converter.implicit.enumvalue = FOO
tck.config.test.javaconfig.converter.implicit.enumvalue.broken = foobar
tck.config.test.javaconfig.converter.implicit.charSequenceCt=charSequenceCt
tck.config.test.javaconfig.converter.implicit.charSequenceParse=charSequenceParse
tck.config.test.javaconfig.converter.implicit.charSequenceValueOf=charSequenceValueOf
tck.config.test.javaconfig.converter.implicit.stringCt=stringCt
tck.config.test.javaconfig.converter.implicit.stringValueOf=stringValueOf
tck.config.test.javaconfig.converter.implicit.stringOf=stringOf
tck.config.test.javaconfig.converter.implicit.charSequenceParse.yearmonth=2017-12
tck.config.test.javaconfig.converter.implicit.enumValueOf=BAZ


#array converter tests

tck.config.test.javaconfig.converter.array.pizza=large:cheese\\,mushroom,medium:chicken,small:pepperoni
tck.config.test.javaconfig.converter.integervalues = 1234,9999
tck.config.test.javaconfig.converter.longvalues = 1234567890,1999999999
tck.config.test.javaconfig.converter.floatvalues = 12.34,99.99
tck.config.test.javaconfig.converter.doublevalues = 12.34,99.9999
tck.config.test.javaconfig.converter.durationvalues = PT15M,PT20M
tck.config.test.javaconfig.converter.localtimevalues = 10:37,11:44
tck.config.test.javaconfig.converter.localdatevalues = 2017-12-24,2017-11-29
tck.config.test.javaconfig.converter.localdatetimevalues = 2017-12-24T10:25:30,2017-12-24T10:25:33
tck.config.test.javaconfig.converter.offsetdatetimevalues = 2007-12-03T10:15:30+01:00,2007-12-03T10:15:30+02:00
tck.config.test.javaconfig.converter.offsettimevalues = 13:45:30.123456789+02:00,13:45:30.123456789+03:00
tck.config.test.javaconfig.converter.instantvalues = 2015-06-02T21:34:33.616Z,2017-06-02T21:34:33.616Z
tck.config.test.javaconfig.converter.booleanvalues=true,off,on
tck.config.test.javaconfig.converter.stringvalues=microservice,microprofile,m\\,f,microservice
tck.config.test.javaconfig.converter.urlvalues=http://microprofile.io,http://openliberty.io,http://microprofile.io

tck.config.test.javaconfig.converter.class=org.eclipse.microprofile.config.tck.ClassConverterTest
tck.config.test.javaconfig.converter.class.array=org.eclipse.microprofile.config.tck.ClassConverterTest,java.lang.String

# variable replacement rests
tck.config.variable.baseHost = some.host.name
tck.config.variable.firstEndpoint = http://${tck.config.variable.baseHost}/endpointOne
tck.config.variable.secondEndpoint = http://${tck.config.variable.baseHost}/endpointTwo

# empty config property test
tck.config.empty=
