//
// Copyright (c) 2016-2017 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Contributors:
// John D. Ament
// Emily Jiang

[[release_notes_11]]
== Release Notes for MicroProfile Config 1.1

The following changes occurred in the 1.1 release, compared to 1.0

A full list of changes may be found on the link:https://github.com/eclipse/microprofile-config/milestone/2?closed=1[MicroProfile Config 1.1 Milestone]

=== API/SPI Changes

- The `ConfigSource` SPI has been extended with a default method that returns the property names for a given `ConfigSource`  (link:https://github.com/eclipse/microprofile-config/issues/178[#178])

=== Functional Changes

- Implementations must now include a `URL` Converter, of `@Priority(1)` (link:https://github.com/eclipse/microprofile-config/issues/181[#181])
- The format of the default property name for an injection point using `@ConfigProperty` has been changed to no longer lower case the first letter of the class.  Implementations may still support this behavior.  Instead, MicroProfile Config 1.1 requires the actual class name to be used. (link:https://github.com/eclipse/microprofile-config/issues/233[#233])
- Implementations must now support primitive types, in addition to the already specified primtive type wrappers (link:https://github.com/eclipse/microprofile-config/issues/204[#204])

=== Specification Changes

- Clarified what it means for a value to be present (link:https://github.com/eclipse/microprofile-config/issues/216[#216])

[[release_notes_12]]
== Release Notes for MicroProfile Config 1.2

The following changes occurred in the 1.2 release, compared to 1.1

A full list of changes may be found on the link:https://github.com/eclipse/microprofile-config/milestone/3?closed=1[MicroProfile Config 1.2 Milestone]

=== API/SPI Changes

- The `ConfigBuilder` SPI has been extended with a method that allows for a converter with the specified class type to be registered  (link:https://github.com/eclipse/microprofile-config/issues/205[#205]). This change removes the limitation, which was unable to add a lambda converter, from the previous releases.

=== Functional Changes

- Implementations must now support the array converter (link:https://github.com/eclipse/microprofile-config/issues/259[#259]).
For the array converter, the programmatic lookup of a property (e.g. `config.getValue(myProp, String[].class)`) must support the return type of the array. For the injection lookup, an Array, List or Set must be supported as well (e.g. `@Inject @ConfigProperty(name="myProp") private List<String> propValue;`). 

- Implementations must also support the common sense converters (link:https://github.com/eclipse/microprofile-config/issues/269[#269]) where there is no corresponding type of converters provided for a given class. The implementation must use the class's constructor with a single string parameter, then try `valueOf(String)` followed by `parse(CharSequence)`. 

- Implementations must also support Class converter (link:https://github.com/eclipse/microprofile-config/issues/267[#267])

=== Specification Changes

- Specification changes to document 
 (link:https://github.com/eclipse/microprofile-config/issues/205[#205]),
 (link:https://github.com/eclipse/microprofile-config/issues/259[#259]), 
 (link:https://github.com/eclipse/microprofile-config/issues/269[#269])
 (link:https://github.com/eclipse/microprofile-config/issues/267[#267])

=== Other Changes
The API bundle can work with either CDI 1.2 or CDI 2.0 in OSGi environment (link:https://github.com/eclipse/microprofile-config/issues/249[#249]).

A tck test was added to ensure the search path of `microprofile-config.properties` for a `war` archive is `WEB-INF\classes\META-INF` (link:https://github.com/eclipse/microprofile-config/issues/268[#268])

[[release_notes_13]]
== Release Notes for MicroProfile Config 1.3

The following changes occurred in the 1.3 release, compared to 1.2

A full list of changes may be found on the link:https://github.com/eclipse/microprofile-config/milestone/4?closed=1[MicroProfile Config 1.3 Milestone]

=== API/SPI Changes

No API/SPI changes.

=== Functional Changes

- The implicit (common sense) converters have been improved and some of the built-in converters are removed from the spec as they are covered by implicit converters. The method invocation sequence on implicit converters are further improved (link:https://github.com/eclipse/microprofile-config/issues/325[#325]). 

- Implementations must also support the mapping of a config property to the corresponding environment variable (link:https://github.com/eclipse/microprofile-config/issues/264[#264])

=== Specification Changes

- Specification changes to document 
 (link:https://github.com/eclipse/microprofile-config/issues/348[#348]),
 (link:https://github.com/eclipse/microprofile-config/issues/325[#325]), 
 (link:https://github.com/eclipse/microprofile-config/issues/264[#264])

=== Other Changes
More CTS were added:

- Assert URI will be converted (link:https://github.com/eclipse/microprofile-config/issues/322[#322])

- Testing injecting an Optional<String> that has no config value (link:https://github.com/eclipse/microprofile-config/issues/336[#336]).

- Built-in converters are automatically added to the injected config ((link:https://github.com/eclipse/microprofile-config/issues/348[#348])

Java2 security related change (link:https://github.com/eclipse/microprofile-config/issues/343[#343])


[[release_notes_14]]
== Release Notes for MicroProfile Config 1.4

The following changes occurred in the 1.4 release, compared to 1.3

A full list of changes may be found on the link:https://github.com/eclipse/microprofile-config/milestone/7[MicroProfile Config 1.4 Milestone]

=== API/SPI Changes

MicroProfile Config 1.4 introduced a way to deal with dynamic values.
To support this feature from the user side we introduced the `ConfigAccessor`.

We also introduced a way to have `ConfigSources` notify the `Config` about an underlying attribute change.

MicroProfile Config now supports variable evaluation so that a Config property value can refer to other config properties.

=== Functional Changes

OSGi compatibility got improved.
